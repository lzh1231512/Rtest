@using DL91;
@{
    ViewData["Title"] = "Home Page";
    var TypeLst = ViewBag.TypeLst as List<DBType>;
}
@model DL91.Models.SearchViewModel
<style>
    body {
        padding-top: 10px;
    }
    input[type=checkbox].form-control{
        width:24px;
    }
</style>
<script>
    var GetImgURL = '@Url.Action("GetImg", "Home")';
    var IndexForAjaxUrl = '@Url.Action("IndexForAjax", "Home")';
    var BuildTime = '@DL91Web.Helpers.Common.CompileTime';
    var baseUrl = window.location.origin + '@Url.Content("~/")';
</script>
<div>
    <div class="panel panel-info">
        <div class="panel-heading" id="TelescopicHead" data-toggle="collapse" data-target="#SalesOrderSearchArea">
            <h3 class="panel-title" id="displaySearchConfig">
                Search Area <span id="displayDowntask"></span>&nbsp;&nbsp;
            </h3>
        </div>
        <div id="SalesOrderSearchArea" class="panel-body in searchArea">
            <div class="row">
                <div class="col-md-2">
                    @Html.Label("", "Type")
                    <select id="typeId" name="typeId" class="form-control">
                        @foreach (var item in TypeLst)
            {
                @Html.Raw("<option " + (Model.typeId == item.id ? "selected=\"selected\"" : "") + "  value='" + item.id + "'>" + item.name + "</option>");
}
                    </select>
                </div>
                <div class="col-md-2">
                    @Html.Label("", "Contains")
                    @Html.EditorFor(m => m.title1, new { htmlAttributes = new { @class = "form-control" } })
                </div>
                @*<div class="col-md-3">
            @Html.Label("", "Not Contains")
            @Html.EditorFor(m => m.title2, new { htmlAttributes = new { @class = "form-control" } })
        </div>*@
                <div class="col-md-2">
                    @Html.Label("", "Is Like")
                    @*<select id="isLike" name="isLike" class="form-control">
                        @Html.Raw("<option " + (Model.isLike == 2 ? "selected=\"selected\"" : "") + "  value='2'>ALL</option>");
                        @Html.Raw("<option " + (Model.isLike == 1 ? "selected=\"selected\"" : "") + "  value='1'>Like</option>");
                        @Html.Raw("<option " + (Model.isLike == 0 ? "selected=\"selected\"" : "") + "  value='0'>No Like</option>");
                    </select>*@
                    <input id="isLike" type="checkbox" class="form-control" value="" />
                </div>
                <div class="col-md-2">
                    @Html.Label("", "From Cache")
                    <input id="isFromCache" type="checkbox" class="form-control" value="" />
                </div>
                <div class="col-md-2">
                    @Html.Label("", "player")
                    <select id="selPlayer" class="form-control">
                        <option value="1">ChimeeJS</option>
                        <option value="2">VideoJS</option>
                    </select>
                </div>
            </div>
            <div class="row" style="margin-top:10px;">
                <div class="col-md-12 form-button-Lines">
                    <button id="btnSubmitSalesOrderSearch" class="btn btn-info CommonBtn"><i class='fa fa-search'></i> Search</button>
                    <input id="btnClear" type="button" class="btn btn-default CommonBtn" value="Clear All" />
                    <input id="btnSync" type="button" class="btn btn-default CommonBtn" value="Sync Now" />
                </div>
            </div>
        </div>
    </div>
    <div id="SalesOrderResult">

    </div>
</div>
<script>
    loadStyle([
        baseUrl + 'lib/bootstrap/dist/css/bootstrap.css',
        baseUrl + 'css/site.css',
        baseUrl + 'css/pager.css',
        baseUrl + 'css/font-awesome.css'],
        BuildTime);
    loadjs([baseUrl + 'lib/jquery/dist/jquery.js',
        baseUrl + 'lib/bootstrap/dist/js/bootstrap.js',
        baseUrl + 'js/IndexDB.js',
        baseUrl + 'js/cacheM3u8.js',
        baseUrl + 'js/ajaxpager/ajaxpager.js']);

    var playHtml1 = '', playHtml2 = '', loadjsUrl = '';
    loadHTML(baseUrl + 'play.html', BuildTime, function (ht) {
        playHtml1 = ht;
    });
    loadHTML(baseUrl + 'play2.html', BuildTime, function (ht) {
        playHtml2 = ht;
    });
    loadHTML(baseUrl + 'js/loadJs.js', BuildTime, function (ht) {
        var blob = new Blob([ht], { type: 'application/javascript' });
        loadjsUrl = URL.createObjectURL(blob);
    });
    function onPageLoad() {
        window.scrollTo(0, 0);
    }
    function play(obj) {
        var id = $(obj).data('id');
        var title = $(obj).data('title');
        var filesize = $(obj).data('filesize');
        var ishd = $(obj).data('ishd');
        var islike = $(obj).data('islike');
        var url = $(obj).data('url');
        var createdate = $(obj).data('createdate');
        var newHtml = $('#selPlayer').val() == 1 ? playHtml1 : playHtml2;
        newHtml = newHtml.replace('{id}', id)
            .replace('{title}', title)
            .replace('{filesize}', filesize)
            .replace('{isHD}', ishd)
            .replace('{isLike}', islike)
            .replace('{url}', url)
            .replace('{createdate}', createdate)
            .replace('{loadJsUrl}', loadjsUrl)
            .replace(/{site}/g, baseUrl);

        var blob = new Blob([newHtml], { type: 'text/html' })
        obj.href = URL.createObjectURL(blob);
    }

    async function fixOldData() {
        var list = await m3u8.getCachedList();
        var ids = [];
        for (var i = 0; i < list.length; i++) {
            if (!list[i].createDate) {
                ids.push(list[i].id);
            }
        }
        if (ids.length > 0) {
            $.ajax({
                method: "post",
                type:'json',
                url: "@Url.Action("GetByIDs")",
                data: { ids: ids.join(',') },
                success: function (data) {
                    for (var i = 0; i < list.length; i++) {
                        if (!list[i].createDate) {
                            for (var j = 0; j < data.length; j++) {
                                if (list[i].id == data[j].id) {
                                    list[i].createDate = data[j].createDate;
                                    list[i].fileSize = data[j].fileSize;
                                    list[i].isHD = data[j].isHD;
                                    list[i].isLike = data[j].isLike;
                                    list[i].title = data[j].title;
                                    m3u8.updateCache(list[i]);
                                    break;
                                }
                            }
                        }
                    }
                    alert('fixed');
                }
            });
        }
    }

    $(function () {
        $('#selPlayer').change(function () {
            localStorage.setItem('selPlayer', $(this).val());
        });
        var pl = localStorage.getItem('selPlayer');
        if (pl) {
            $('#selPlayer').val(pl);
        }
        $('#btnClear').click(function(){
            $('#title1,#title2').val('');
            $('#isLike').prop('checked',false);
        });
        $('#btnSync').click(function () {
            $.post('@Url.Action("sync")');
            alert('OK');
        });
        m3u8.initDownload(function (taskCount) {
            $('#displayDowntask').html('('+taskCount+')');
        });
        $('#btnSubmitSalesOrderSearch').click(async function () {
            if ($('#isFromCache').is(':checked')) {
                var list = await m3u8.getCachedList();
                ajaxPager.pager.gotopage(1, $("div.pagination-container"), false, list);
            }
            else {
                var baseurl = IndexForAjaxUrl + "?currentPage=0&&title1=" + ($('#title1').val() || '') + "&&title2=" + ($('#title2').val() || '') + "&&isLike=" + ($('#isLike').is(':checked')?1:2) + "&&typeId=" + $('#typeId').val();
                $('input[name=hipagebaseurl]').val(baseurl);
                ajaxPager.pager.gotopage(1, $("div.pagination-container"));
            }

            return false;
        });
        $('#btnSubmitSalesOrderSearch').click();
        fixOldData();
    });
    history.pushState(null, null, location.href);
    window.addEventListener('popstate', function (event) {
        if ($('#hicurrentPage').val() != '1') {
            history.pushState(null, null, location.href);
            $('span.btnprevious').click();
        }
    });
</script>